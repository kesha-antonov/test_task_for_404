.students.left-container{ data: { disciplines: Discipline.order(name: :asc).map{|d| { id: d.id, name: d.name } }.to_json } }
  .add-student
    %h2 Добавить студента
    = simple_form_for Student.new, data: { remote: true, type: 'json' }, method: 'post' do |s|
      = s.input :first_name, label: 'Имя:'
      = s.input :last_name, label: 'Фамилия:'
      = s.input :study_group, label: 'Группа:'
      = s.input :birthday, label: 'Дата рождения:'
      = s.input :email, label: 'Email:'
      = s.input :ip, label: 'IP:'
      = s.input :registered_at, label: 'Дата регистрации:'
      = s.submit 'Создать'

  .students-list
    %h2 Список последних добавленных студентов
    = render 'table', students: @students

  .high-rated-list
    %h2 Список студентов с наивысшим средним баллом
    = link_to 'Обновить', high_rated_students_path, method: 'get', data: { remote: true, type: 'json' }, class: 'get-high-rated'
    - students = Student.includes(semesters: {semesters_disciplines: :discipline}).joins(:semesters).where.not(semesters: {avg_mark: nil}).group('students.id').order('max(semesters.avg_mark) DESC').limit(10)
    %table
      %thead
        %tr
          %th Имя
          %th Фамилия
          %th Группа
          %th Дата рождения
          %th Email
          %th IP
          %th Дата регистрации
          %th Средний балл
          %th Действия
      %tbody
        - students.each do |s|
          %tr
            %td.first_name= s.first_name
            %td.last_name= s.last_name
            %td.study_group= s.study_group
            %td.birthday= s.birthday
            %td.email= s.email
            %td.ip= s.ip
            %td.registered_at= s.registered_at
            %td.avg_mark= s.semesters.map(&:avg_mark).join(', ')
            %td= link_to 'Подробности', '#', class: 'show-student', data: { student: s }

  .filter-with-ip-and-characteristic
    %h2 Выборка всех студентов, с IP которых произошло более одной регистрации, и при этом хотя бы у одного из них написана характеристика научного руководителя
    = link_to 'Обновить', high_registrated_students_path, method: 'get', data: { remote: true, type: 'json' }, class: 'get-high-registrated'
    - students = Student.where(ip: Student.select(:ip).group(:ip).having('COUNT(ip) > 1')).limit(10)
    - students = [] unless students.joins(:semesters).where.not(semesters: {characteristic: ''}).count.nonzero?
    %table
      %thead
        %tr
          %th Имя
          %th Фамилия
          %th Группа
          %th Дата рождения
          %th Email
          %th IP
          %th Дата регистрации
          %th Действия
      %tbody
        - students.each do |s|
          %tr
            %td.first_name= s.first_name
            %td.last_name= s.last_name
            %td.study_group= s.study_group
            %td.birthday= s.birthday
            %td.email= s.email
            %td.ip= s.ip
            %td.registered_at= s.registered_at
            %td= link_to 'Подробности', '#', class: 'show-student', data: { student: s }


  .search-with-filters
    %h2 Поиск студентов по фильтрам
    = simple_form_for :search, url: '/students/search', method: 'get', data: { remote: true, type: 'json' }, html: { class: 'search-students' } do |ss|
      = ss.input :name, label: 'Имя и/или фамилия:', required: false
      = ss.input :study_group, label: 'Группа:', required: false
      = ss.input :semester, label: 'Семестр:', required: false
      = ss.input :avg_mark_down, label: 'Средний балл(от):', required: false
      = ss.input :avg_mark_up, label: 'Средний балл(до):', required: false
      = ss.submit 'Найти', data: { disable_with: 'Ищем...' }
    %table
      %thead
        %tr
          %th Имя
          %th Фамилия
          %th Группа
          %th Дата рождения
          %th Email
          %th IP
          %th Дата регистрации
          %th Действия
      %tbody

.display-container.right-container
